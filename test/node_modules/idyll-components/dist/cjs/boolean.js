'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Boolean = function (_React$PureComponent) {
  _inherits(Boolean, _React$PureComponent);

  function Boolean(props) {
    _classCallCheck(this, Boolean);

    return _possibleConstructorReturn(this, _React$PureComponent.call(this, props));
  }

  Boolean.prototype.toggleCheckbox = function toggleCheckbox() {
    this.props.updateProps({
      value: !this.props.value
    });
  };

  Boolean.prototype.render = function render() {
    var value = this.props.value;

    return _react2.default.createElement('input', {
      type: 'checkbox',
      onChange: this.toggleCheckbox.bind(this),
      value: value
    });
  };

  return Boolean;
}(_react2.default.PureComponent);

Boolean.defaultProps = {
  value: false
};

Boolean._idyll = {
  name: 'Boolean',
  tagType: 'closed',
  props: [{
    name: 'value',
    type: 'boolean',
    example: 'x',
    description: 'A value for the checkbox. If this value is truthy, the checkbox will be shown.'
  }]
};

exports.default = Boolean;