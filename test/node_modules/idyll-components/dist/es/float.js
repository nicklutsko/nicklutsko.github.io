function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React from 'react';

var Float = function (_React$PureComponent) {
  _inherits(Float, _React$PureComponent);

  function Float() {
    _classCallCheck(this, Float);

    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));
  }

  Float.prototype.render = function render() {
    return React.createElement(
      'div',
      {
        className: 'float ' + this.props.position,
        style: { float: this.props.position, width: this.props.width || '50%' }
      },
      this.props.children
    );
  };

  return Float;
}(React.PureComponent);

Float._idyll = {
  name: 'Float',
  tagType: 'open',
  props: [{
    name: 'position',
    type: 'string',
    example: '"left"',
    description: 'the float position: left or right.'
  }, {
    name: 'width',
    type: 'string',
    example: '"50%"',
    defaultValue: '"50%"',
    description: 'the width of the component, specified in pixels or percentage.'
  }]
};

export default Float;