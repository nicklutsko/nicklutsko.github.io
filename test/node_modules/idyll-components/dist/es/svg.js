function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React from 'react';
import InlineSVG from 'react-inlinesvg';

var SVG = function (_React$PureComponent) {
  _inherits(SVG, _React$PureComponent);

  function SVG() {
    _classCallCheck(this, SVG);

    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));
  }

  SVG.prototype.render = function render() {
    var _props = this.props,
        hasError = _props.hasError,
        updateProps = _props.updateProps,
        idyll = _props.idyll,
        props = _objectWithoutProperties(_props, ['hasError', 'updateProps', 'idyll']);

    if (!this.props.src) {
      return React.createElement('svg', props);
    }
    return React.createElement(InlineSVG, props);
  };

  return SVG;
}(React.PureComponent);

SVG.defaultProps = {
  src: ''
};

SVG._idyll = {
  name: 'SVG',
  tagType: 'closed',
  props: [{
    name: 'src',
    type: 'string',
    example: '"https://upload.wikimedia.org/wikipedia/commons/f/fd/Ghostscript_Tiger.svg"'
  }]
};

export default SVG;